# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Node.js modules
node_modules/

# --- Mood Map Project Custom Ignores ---

# Model directories and files
models/
src/models/*.pkl
src/models/*.pt
src/models/*.h5
src/models/*.onnx
src/models/*.tflite
src/models/checkpoints/
src/models/pretrained/
model_checkpoints/

# Data directories
data/
data/raw/
data/interim/
data/processed/
data/external/

# Notebooks
notebooks/
*.ipynb
.ipynb_checkpoints/

# Backend model cache and logs
backend/model_cache/
backend/logs/

# Browser extension build/test artifacts
browser-extension/lib/
browser-extension/coverage/
browser-extension/dist/

# Configuration files
*.config
config/*.json
fetch_tweets_config.json
sentiment_api_config.json

# Results and checkpoints
results/
results/checkpoint*/

# Large files and binary formats
*.safetensors
*.pth
*.bin
*.csv
*.parquet
*.feather
*.arrow
*.pkl
*.joblib
*.h5
*.hdf5
*.sqlite
*.db

# Logs and temporary files
logs/
*.log
.tmp/
tmp/
temp/

# Documentation build
docs/_build/
site/

# Visualization outputs
figures/
plots/
*.png
*.jpg
*.jpeg
*.gif
*.svg
*.pdf

# Environment and IDE
.env*
.vscode/
.idea/
.venv/
env/
venv/
ENV/
src/training/sentiment_training_ensemble.py
bart_summariser.py
.gitignore
check_model_loading.py
check_summarization.py
desktop.ini
finetune_ensemble_model.py
.gitignore
fix_model_paths.py
.gitignore
improved_api.py
install_dependencies.py
preprocess_twitter_sentiment.py
.gitignore
run_commands.txt
presentation_instructions.txt
detailed_model_check.py
run_enhanced_training.py
run_everything.py
run_everything.py
train_optimized_model.py
.gitignore
test_api.py
test_server.py
test_summarization.py
train_fixed_model.py
test_api.py
train_optimized_model_simple.py
.gitignore
train_simple_model.py
.gitignore
train_with_improvements.py
train_roberta_model.py
backend/cert.pem
.gitignore
backend/key.pem
backend/sentiment_api.py
src/__init__.py
src/training/advanced_architecture_training.py
.gitignore
src/training/class_balancing.py
scripts/fetch_tweets.py
scripts/create_robust_model.py
notebooks/sentiment_analysis_cpu.ipynb
src/utils/data_augmentation.py
src/utils/add_examples_to_dataset.py
src/utils/emotion_classifier.py
src/utils/performance_utils.py
src/training/simple_enhanced_model.py
src/training/uncertainty.py
.gitignore
src/utils/add_examples_to_dataset.py
.gitignore
src/utils/sentiment_cache.py
src/utils/topic_detector.py
src/utils/reduce_dataset.py
src/utils/add_examples_to_dataset.py
src/utils/__init__.py
.gitignore
src/training/train_sentiment_model.py
src/training/sentiment_training_unstuck.py
.gitignore
src/training/sentiment_training_quick.py
src/training/sentiment_training_enhanced.py
src/training/sentiment_training_advanced.py
src/training/train_sentiment_model.py
.gitignore
src/training/unstuck_model.py
src/training/train_sentiment_model.py
src/training/sentiment_training_simplified.py
src/training/sentiment_training_accelerated.py
.gitignore
src/training/regularization.py
src/training/sentiment_finetuning_advanced.py
src/training/sentiment_training_accelerated.py
src/training/sentiment_training_comprehensive.py
src/training/sentiment_training_accelerated.py
src/training/train_sentiment_model.py
src/training/lr_scheduler.py
src/training/ensemble_techniques.py
src/training/optimized_sentiment_training.py
.gitignore
src/training/enhanced_sentiment_model.py
src/training/optimized_sentiment_model.py
src/utils/add_examples_to_dataset.py
src/utils/training_optimizers.py
src/utils/rag_enhancer.py
.gitignore
src/models/sentiment_analyzer.py
.gitignore
src/training/data_augmentation.py
src/training/early_stopping.py
src/training/data_preprocessing.py
src/training/optimized_training.py
src/training/sentiment_training_accelerated.py
src/training/sentiment_training_accelerated.py
src/training/train_sentiment_model.py
src/utils/add_examples_to_dataset.py
src/utils/add_examples_to_dataset.py
src/utils/sentiment_model_saver.py
scripts/create_robust_model.py
src/models/sentiment_analyzer.py
simplified_api.py
test_api.py
backend/sentiment_api.py
run_everything.py
run_everything.py
test_api.py
backend/sentiment_api.py
notebooks/verify_installation.ipynb
